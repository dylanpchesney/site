name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Debug environment variables
        run: |
          echo "Checking if secrets are set..."
          if [ -n "${{ secrets.CONTENTFUL_SPACE_ID }}" ]; then
            echo "CONTENTFUL_SPACE_ID is set"
          else
            echo "CONTENTFUL_SPACE_ID is not set"
          fi
          if [ -n "${{ secrets.CONTENTFUL_DELIVERY_TOKEN }}" ]; then
            echo "CONTENTFUL_DELIVERY_TOKEN is set"
          else
            echo "CONTENTFUL_DELIVERY_TOKEN is not set"
          fi
          if [ -n "${{ secrets.CONTENTFUL_PREVIEW_TOKEN }}" ]; then
            echo "CONTENTFUL_PREVIEW_TOKEN is set"
          else
            echo "CONTENTFUL_PREVIEW_TOKEN is not set"
          fi
          
      - name: Create production config
        env:
          SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
          DELIVERY_TOKEN: ${{ secrets.CONTENTFUL_DELIVERY_TOKEN }}
          PREVIEW_TOKEN: ${{ secrets.CONTENTFUL_PREVIEW_TOKEN }}
        run: |
          echo "Creating production configuration..."
          
          # Use Node.js for reliable replacement that handles special characters
          node -e "
          const fs = require('fs');
          
          // Get environment variables
          const spaceId = process.env.SPACE_ID;
          const deliveryToken = process.env.DELIVERY_TOKEN;
          const previewToken = process.env.PREVIEW_TOKEN;
          
          console.log('Environment variables available:', {
            spaceId: spaceId ? spaceId.substring(0, 8) + '...' : 'missing',
            deliveryToken: deliveryToken ? deliveryToken.substring(0, 8) + '...' : 'missing',
            previewToken: previewToken ? previewToken.substring(0, 8) + '...' : 'missing'
          });
          
          if (!spaceId || !deliveryToken || !previewToken) {
            console.error('Missing required environment variables');
            process.exit(1);
          }
          
          // Read the template file
          let content = fs.readFileSync('contentful-config.template.js', 'utf8');
          
          // Replace placeholders - using simple string replacement to avoid regex issues
          content = content.split('CONTENTFUL_SPACE_ID').join(spaceId);
          content = content.split('CONTENTFUL_DELIVERY_TOKEN').join(deliveryToken);
          content = content.split('CONTENTFUL_PREVIEW_TOKEN').join(previewToken);
          
          // Write the production config
          fs.writeFileSync('contentful-config.js', content);
          
          console.log('Production config created successfully');
          
          // Verify the file doesn't contain placeholders
          const finalContent = fs.readFileSync('contentful-config.js', 'utf8');
          const placeholdersRemaining = [];
          
          if (finalContent.includes('CONTENTFUL_SPACE_ID')) {
            placeholdersRemaining.push('CONTENTFUL_SPACE_ID');
          }
          if (finalContent.includes('CONTENTFUL_DELIVERY_TOKEN')) {
            placeholdersRemaining.push('CONTENTFUL_DELIVERY_TOKEN');
          }
          if (finalContent.includes('CONTENTFUL_PREVIEW_TOKEN')) {
            placeholdersRemaining.push('CONTENTFUL_PREVIEW_TOKEN');
          }
          
          if (placeholdersRemaining.length > 0) {
            console.error('ERROR: Placeholders still found:', placeholdersRemaining);
            console.log('First few lines of config file:');
            console.log(finalContent.split('\n').slice(0, 10).join('\n'));
            process.exit(1);
          }
          
          console.log('SUCCESS: All placeholders replaced successfully');
          console.log('Config preview:', {
            space: finalContent.includes(spaceId) ? 'Found' : 'Missing',
            delivery: finalContent.includes(deliveryToken) ? 'Found' : 'Missing',
            preview: finalContent.includes(previewToken) ? 'Found' : 'Missing'
          });
          "
          
          echo "Configuration replacement completed"
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 