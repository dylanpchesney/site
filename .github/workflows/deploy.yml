name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Debug environment variables
        run: |
          echo "Checking if secrets are set..."
          if [ -n "${{ secrets.CONTENTFUL_SPACE_ID }}" ]; then
            echo "CONTENTFUL_SPACE_ID is set"
            echo "Length of SPACE_ID: ${#CONTENTFUL_SPACE_ID}"
          else
            echo "CONTENTFUL_SPACE_ID is not set"
          fi
          if [ -n "${{ secrets.CONTENTFUL_DELIVERY_TOKEN }}" ]; then
            echo "CONTENTFUL_DELIVERY_TOKEN is set"
            echo "Length of DELIVERY_TOKEN: ${#CONTENTFUL_DELIVERY_TOKEN}"
          else
            echo "CONTENTFUL_DELIVERY_TOKEN is not set"
          fi
          if [ -n "${{ secrets.CONTENTFUL_PREVIEW_TOKEN }}" ]; then
            echo "CONTENTFUL_PREVIEW_TOKEN is set"
            echo "Length of PREVIEW_TOKEN: ${#CONTENTFUL_PREVIEW_TOKEN}"
          else
            echo "CONTENTFUL_PREVIEW_TOKEN is not set"
          fi
          
      - name: Replace environment variables
        env:
          SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
          DELIVERY_TOKEN: ${{ secrets.CONTENTFUL_DELIVERY_TOKEN }}
          PREVIEW_TOKEN: ${{ secrets.CONTENTFUL_PREVIEW_TOKEN }}
        run: |
          echo "Starting environment variable replacement..."
          
          # Create the production config file
          cat > contentful-config.js << EOF
          // Contentful API Configuration
          const contentfulConfig = {
              space: "${SPACE_ID}",
              deliveryToken: "${DELIVERY_TOKEN}",
              previewToken: "${PREVIEW_TOKEN}",
              environment: "master",
              postsPerPage: 3
          };
          
          // Function to check if environment variables are properly set
          function checkConfig() {
              console.log('Checking configuration...');
              console.log('Current hostname:', window.location.hostname);
              
              const isProduction = window.location.hostname !== '127.0.0.1' && window.location.hostname !== 'localhost';
              console.log('Environment:', isProduction ? 'Production' : 'Development');
              
              const missingVars = [];
              if (contentfulConfig.space === 'CONTENTFUL_SPACE_ID') missingVars.push('SPACE_ID');
              if (contentfulConfig.deliveryToken === 'CONTENTFUL_DELIVERY_TOKEN') missingVars.push('DELIVERY_TOKEN');
              if (contentfulConfig.previewToken === 'CONTENTFUL_PREVIEW_TOKEN') missingVars.push('PREVIEW_TOKEN');
              
              if (missingVars.length > 0) {
                  console.error('Missing or invalid environment variables:', missingVars.join(', '));
                  return false;
              }
              return true;
          }
          
          // Function to initialize the configuration
          async function initializeConfig() {
              console.log('Initializing configuration...');
              
              // Check if we're in development mode
              if (window.location.hostname === '127.0.0.1' || window.location.hostname === 'localhost') {
                  try {
                      const devConfig = await import('./contentful-config.dev.js');
                      Object.assign(contentfulConfig, devConfig.contentfulConfig);
                      console.log('Using development configuration');
                  } catch (error) {
                      console.error('Development configuration not found. Using placeholder values.');
                  }
              }
              
              if (!checkConfig()) {
                  console.error('Configuration is invalid. Using fallback posts.');
                  return contentfulConfig;
              }
              
              console.log('Contentful config loaded successfully');
              return contentfulConfig;
          }
          
          // Export the configuration and functions
          export { contentfulConfig, checkConfig, initializeConfig };
          EOF
          
          # Verify the replacements
          echo "Verifying replacements..."
          if grep -q "CONTENTFUL_SPACE_ID" contentful-config.js; then
            echo "WARNING: SPACE_ID placeholder still present"
            cat contentful-config.js | head -n 5
            exit 1
          else
            echo "SPACE_ID replaced successfully"
          fi
          
          if grep -q "CONTENTFUL_DELIVERY_TOKEN" contentful-config.js; then
            echo "WARNING: DELIVERY_TOKEN placeholder still present"
            cat contentful-config.js | head -n 5
            exit 1
          else
            echo "DELIVERY_TOKEN replaced successfully"
          fi
          
          if grep -q "CONTENTFUL_PREVIEW_TOKEN" contentful-config.js; then
            echo "WARNING: PREVIEW_TOKEN placeholder still present"
            cat contentful-config.js | head -n 5
            exit 1
          else
            echo "PREVIEW_TOKEN replaced successfully"
          fi
          
          # Add a timestamp to prevent caching
          echo "// Last updated: $(date)" >> contentful-config.js
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 