name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Debug environment variables
        run: |
          echo "Checking if secrets are set..."
          if [ -n "${{ secrets.CONTENTFUL_SPACE_ID }}" ]; then
            echo "CONTENTFUL_SPACE_ID is set"
          else
            echo "CONTENTFUL_SPACE_ID is not set"
          fi
          if [ -n "${{ secrets.CONTENTFUL_DELIVERY_TOKEN }}" ]; then
            echo "CONTENTFUL_DELIVERY_TOKEN is set"
          else
            echo "CONTENTFUL_DELIVERY_TOKEN is not set"
          fi
          if [ -n "${{ secrets.CONTENTFUL_PREVIEW_TOKEN }}" ]; then
            echo "CONTENTFUL_PREVIEW_TOKEN is set"
          else
            echo "CONTENTFUL_PREVIEW_TOKEN is not set"
          fi
          
      - name: Create production config
        env:
          SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
          DELIVERY_TOKEN: ${{ secrets.CONTENTFUL_DELIVERY_TOKEN }}
          PREVIEW_TOKEN: ${{ secrets.CONTENTFUL_PREVIEW_TOKEN }}
        run: |
          echo "Creating production configuration..."
          
          # Read the complete template file and inject the production values
          node -e "
          const fs = require('fs');
          
          // Get environment variables
          const spaceId = process.env.SPACE_ID;
          const deliveryToken = process.env.DELIVERY_TOKEN;
          const previewToken = process.env.PREVIEW_TOKEN;
          
          console.log('Environment variables available:', {
            spaceId: !!spaceId,
            deliveryToken: !!deliveryToken,
            previewToken: !!previewToken
          });
          
          if (!spaceId || !deliveryToken || !previewToken) {
            console.error('Missing required environment variables');
            process.exit(1);
          }
          
          // Read the template file
          const templateContent = fs.readFileSync('contentful-config.template.js', 'utf8');
          
          // Replace placeholders with actual values
          const productionContent = templateContent
            .replace(/space: 'CONTENTFUL_SPACE_ID'/g, \`space: '\${spaceId}'\`)
            .replace(/deliveryToken: 'CONTENTFUL_DELIVERY_TOKEN'/g, \`deliveryToken: '\${deliveryToken}'\`)
            .replace(/previewToken: 'CONTENTFUL_PREVIEW_TOKEN'/g, \`previewToken: '\${previewToken}'\`);
          
          // Write the production config
          fs.writeFileSync('contentful-config.js', productionContent);
          
          console.log('Production config created successfully');
          
          // Verify the file doesn't contain placeholders
          const finalContent = fs.readFileSync('contentful-config.js', 'utf8');
          if (finalContent.includes('CONTENTFUL_SPACE_ID') ||
              finalContent.includes('CONTENTFUL_DELIVERY_TOKEN') ||
              finalContent.includes('CONTENTFUL_PREVIEW_TOKEN')) {
            console.error('ERROR: Placeholders still found in config file');
            process.exit(1);
          }
          
          console.log('Config file validation passed');
          "
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 