name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Debug environment variables
        run: |
          echo "Checking if secrets are set..."
          if [ -n "${{ secrets.CONTENTFUL_SPACE_ID }}" ]; then
            echo "CONTENTFUL_SPACE_ID is set"
            echo "Length of SPACE_ID: ${#CONTENTFUL_SPACE_ID}"
          else
            echo "CONTENTFUL_SPACE_ID is not set"
          fi
          if [ -n "${{ secrets.CONTENTFUL_DELIVERY_TOKEN }}" ]; then
            echo "CONTENTFUL_DELIVERY_TOKEN is set"
            echo "Length of DELIVERY_TOKEN: ${#CONTENTFUL_DELIVERY_TOKEN}"
          else
            echo "CONTENTFUL_DELIVERY_TOKEN is not set"
          fi
          if [ -n "${{ secrets.CONTENTFUL_PREVIEW_TOKEN }}" ]; then
            echo "CONTENTFUL_PREVIEW_TOKEN is set"
            echo "Length of PREVIEW_TOKEN: ${#CONTENTFUL_PREVIEW_TOKEN}"
          else
            echo "CONTENTFUL_PREVIEW_TOKEN is not set"
          fi
          
      - name: Replace environment variables
        run: |
          echo "Starting environment variable replacement..."
          
          # Create a temporary Node.js script to handle the replacement
          cat > replace.js << 'EOF'
          const fs = require('fs');
          
          // Read the original file
          const content = fs.readFileSync('contentful-config.js', 'utf8');
          
          // Replace the placeholders
          const replaced = content
            .replace(/CONTENTFUL_SPACE_ID/g, process.env.CONTENTFUL_SPACE_ID)
            .replace(/CONTENTFUL_DELIVERY_TOKEN/g, process.env.CONTENTFUL_DELIVERY_TOKEN)
            .replace(/CONTENTFUL_PREVIEW_TOKEN/g, process.env.CONTENTFUL_PREVIEW_TOKEN);
          
          // Write the replaced content back
          fs.writeFileSync('contentful-config.js', replaced);
          
          // Verify the replacements
          const finalContent = fs.readFileSync('contentful-config.js', 'utf8');
          console.log('Verifying replacements...');
          console.log('Space ID replaced:', !finalContent.includes('CONTENTFUL_SPACE_ID'));
          console.log('Delivery token replaced:', !finalContent.includes('CONTENTFUL_DELIVERY_TOKEN'));
          console.log('Preview token replaced:', !finalContent.includes('CONTENTFUL_PREVIEW_TOKEN'));
          
          // Show the first few lines of the file (without secrets)
          const firstLines = finalContent.split('\n').slice(0, 5).join('\n');
          console.log('\nFirst few lines of the file:');
          console.log(firstLines);
          
          // Check if the values are actually replaced
          const configMatch = finalContent.match(/space:\s*['"]([^'"]+)['"]/);
          if (configMatch) {
            console.log('\nSpace value:', configMatch[1].length > 0 ? 'Replaced' : 'Empty');
          }
          EOF
          
          # Run the replacement script with the secrets
          CONTENTFUL_SPACE_ID="${{ secrets.CONTENTFUL_SPACE_ID }}" \
          CONTENTFUL_DELIVERY_TOKEN="${{ secrets.CONTENTFUL_DELIVERY_TOKEN }}" \
          CONTENTFUL_PREVIEW_TOKEN="${{ secrets.CONTENTFUL_PREVIEW_TOKEN }}" \
          node replace.js
          
          # Clean up
          rm replace.js
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 